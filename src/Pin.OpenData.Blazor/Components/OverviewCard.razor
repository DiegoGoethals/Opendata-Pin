@using Pin.OpenData.Blazor.Models

@code {
    [Parameter]
    public Location location { get; set; }
    [Parameter]
    public EventCallback<Location> onDelete { get; set; }
    private byte[] imageData;

    string imageLink = "https://images.unsplash.com/photo-1553564552-02656d6a2390?q=80&w=1915&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D";
    
    protected override async Task OnInitializedAsync()
    {
        if (location.Image != null)
        {
            using (MemoryStream memoryStream = new MemoryStream())
            {
                await location.Image.CopyToAsync(memoryStream);
                imageData = memoryStream.ToArray();
            }
        }
    }

    private async Task DeleteLocationHandler()
    {
        await onDelete.InvokeAsync(location);
    }
}

<li class="card">
    <div>
        <img src="/images/trash-can.png" alt="delete location" class="delete-location" @onclick="DeleteLocationHandler"/>
    </div>
    <a href="@($"location/{location.Name}")">
        @if (imageData != null && imageData.Length > 0)
        {
            <img src="@($"data:image;base64,{Convert.ToBase64String(imageData)}")" class="card-img-top" alt="@location.Name">
        }
        else
        {
            <img src="@imageLink" class="card-img-top" alt="@location.Name">
        }
        <h2>@location.Name</h2>
    </a>
</li>
