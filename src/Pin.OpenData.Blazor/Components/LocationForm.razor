@using Pin.OpenData.Blazor.Models
@using Pin.OpenData.Blazor.Services

<form @onsubmit="@SubmitForm">
    <div class="form-group">
        <label for="name">Name</label>
        <input type="text" class="form-control" @bind="location.Name" id="name" placeholder="Enter name" required>
    </div>
    <div class="form-group">
        <label for="street">Street name</label>
        <input class="form-control" @bind="location.StreetName" id="street" placeholder="Street" required>
    </div>
    <div class="form-group">
        <label for="house">House number</label>
        <input class="form-control" @bind="location.HouseNumber" id="house" placeholder="House number" required>
    </div>
    <div class="form-group">
        <label for="postal">Postal code</label>
        <input class="form-control" @bind="location.PostalCode" id="postal" type="number" required>
    </div>
    <div class="form-group">
        <label for="city">City</label>
        <input class="form-control" @bind="location.City" id="city" placeholder="City" required>
    </div>
    <div class="form-group">
        <label for="website">Website</label>
        <input class="form-control" @bind="location.Website" id="website" placeholder="Website">
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <input class="form-control" @bind="location.Email" id="email" placeholder="Email" type="email">
    </div>
    <button type="submit" class="btn btn-primary">@((Type == "add") ? "Add new location" : "Update location")</button>
</form>

@code {

    [Parameter]
    public EventCallback<Location> OnFormSubmitted { get; set; }

    [Parameter]
    public string Type { get; set; }

    [Parameter]
    public Location location { get; set; } = new Location();

    private Location locationCopy;

    protected override void OnInitialized()
    {
        locationCopy = new Location
            {
                Id = location.Id != Guid.Empty ? location.Id : Guid.NewGuid(),
                Name = location.Name,
                StreetName = location.StreetName,
                HouseNumber = location.HouseNumber,
                PostalCode = location.PostalCode,
                City = location.City,
                Website = location.Website,
                Email = location.Email,
                GeoPoint2D = location.GeoPoint2D
            };

        location = locationCopy;
    }

    private async Task SubmitForm()
    {
        await OnFormSubmitted.InvokeAsync(location);
    }
}
